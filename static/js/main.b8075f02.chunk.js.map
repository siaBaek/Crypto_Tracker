{"version":3,"sources":["api.ts","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","coinId","fetchCoinTickers","PriceList","styled","ul","PriceOne","li","props","theme","bgColor","accentColor","Price","useQuery","refetchInterval","isLoading","priceData","data","quotes","USD","market_cap","toLocaleString","ath_price","toFixed","ath_date","toLocaleLowerCase","Chart","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","type","series","map","price","x","time_close","y","open","high","low","close","options","mode","chart","height","background","toolbar","show","grid","xaxis","labels","axisBorder","axisTicks","yaxis","Title","h1","Container","div","Header","header","GoBack","Img","img","Loader","span","LastUpdated","p","Overview","OverviewItem","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","history","useHistory","Helmet","name","onClick","push","src","toLowerCase","split","join","last_updated","substring","rank","symbol","percent_change_24h","total_supply","max_supply","to","path","CoinsList","Coins","slice","coin","pathname","id","Router","basename","process","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.b8075f02.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport async function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport async function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2; // 일주일 전\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { prependOnceListener } from \"process\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinTickers } from \"../api\";\n\nconst PriceList = styled.ul``;\n\nconst PriceOne = styled.li`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  padding: 10px 20px;\n  color: ${(props) => props.theme.bgColor};\n  margin-bottom: 10px;\n  border-radius: 15px;\n  border: 2px solid ${(props) => props.theme.accentColor};\n  span:first-child {\n    font-size: 15px;\n    margin-bottom: 10px;\n    /* color: ${(props) => props.theme.accentColor}; */\n  }\n  span:last-child {\n    font-size: 25px;\n  }\n`;\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface PriceProps {\n  coinId: string;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data: priceData } = useQuery<PriceData>(\n    [\"price\", coinId],\n    () => fetchCoinTickers(coinId),\n    { refetchInterval: 5000 }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading prices...\"\n      ) : (\n        <PriceList>\n          <PriceOne>\n            <span>Market Cap</span>\n            <span>${priceData?.quotes.USD.market_cap.toLocaleString()}</span>\n          </PriceOne>\n          <PriceOne>\n            <span>All Time High (Price)</span>\n            <span>${priceData?.quotes.USD.ath_price.toFixed(3)}</span>\n          </PriceOne>\n          <PriceOne>\n            <span>All Time High (Date)</span>\n            <span>{priceData?.quotes.USD.ath_date.toLocaleLowerCase()}</span>\n          </PriceOne>\n        </PriceList>\n      )}\n    </div>\n  );\n}\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    { refetchInterval: 5000 }\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => ({\n                x: price.time_close,\n                y: [price.open, price.high, price.low, price.close],\n              })),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              type: \"candlestick\",\n              height: 800,\n              background: \"transparent\",\n              toolbar: {\n                show: false,\n              },\n            },\n            grid: { show: false },\n            xaxis: {\n              type: \"datetime\",\n              labels: { show: false },\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n            },\n            yaxis: {\n              show: false,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\nexport default Chart;\n","import { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router\";\nimport styled from \"styled-components\";\nimport Price from \"./Price\";\nimport Chart from \"./Chart\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { useQuery } from \"react-query\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Container = styled.div`\n  padding: 20px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst GoBack = styled.div`\n  button {\n    background: ${(props) => props.theme.accentColor};\n    border: 0;\n    border-radius: 10px;\n  }\n`;\n\nconst Img = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n  transform: translateY(-5px);\n`;\n\nconst Loader = styled.span`\n  display: block;\n  text-align: center;\n`;\n\nconst LastUpdated = styled.p`\n  margin: 10px 0px;\n  text-align: right;\n  font-size: 13px;\n  span {\n    color: ${(props) => props.theme.accentColor};\n  }\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  margin-bottom: 25px;\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  contract: string;\n  platform: string;\n  contracts: object;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    { refetchInterval: 3000 }\n  );\n  const loading = infoLoading || tickersLoading;\n  const history = useHistory();\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <GoBack\n        onClick={() => {\n          history.push(\"/\");\n        }}\n      >\n        <button>Go Home</button>\n      </GoBack>\n      <Header>\n        <Img\n          src={`https://raw.githubusercontent.com/ErikThiart/cryptocurrency-icons/master/16/${tickersData?.name\n            .toLowerCase()\n            .split(\" \")\n            .join(\"-\")}.png`}\n        />\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <LastUpdated>\n            <span>Last Updated </span>\n            {tickersData?.last_updated.substring(0, 10)}\n          </LastUpdated>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>\n                ${tickersData?.quotes.USD.price.toFixed(3)} (\n                {tickersData?.quotes.USD.percent_change_24h}%)\n              </span>\n            </OverviewItem>\n          </Overview>\n\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply.toLocaleString()}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  position: sticky;\n  top: 0;\n  height: 150px;\n  background: ${(props) => props.theme.bgColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  margin-bottom: 10px;\n  border-radius: 15px;\n  a {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in-out;\n  }\n  &:hover {\n    a div {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n  a div {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 38px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  display: block;\n  text-align: center;\n`;\n\nconst Img = styled.img`\n  width: 25px;\n  height: 25px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>Top 100 Crypto Coins</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <div>\n                  <Img\n                    src={`https://raw.githubusercontent.com/ErikThiart/cryptocurrency-icons/master/16/${coin.name\n                      .toLowerCase()\n                      .split(\" \")\n                      .join(\"-\")}.png`}\n                  />\n                  {coin.name} &rarr;\n                </div>\n                <p>Rank {coin.rank}</p>\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#fbc531\",\n  // #44bd32\n};\n"],"sourceRoot":""}