{"ast":null,"code":"var _jsxFileName = \"/Users/siabaek/Desktop/\\u1102\\u1169\\u1106\\u1161\\u1103\\u1173\\u110F\\u1169\\u1103\\u1165/react-masterclass/src/routes/Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId), {\n    refetchInterval: 5000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"candlestick\",\n      series: [{\n        data: data === null || data === void 0 ? void 0 : data.map(price => ({\n          x: price.time_close,\n          y: [price.open, price.high, price.low, price.close]\n        }))\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          type: \"candlestick\",\n          height: 800,\n          background: \"transparent\",\n          toolbar: {\n            show: false\n          }\n        },\n        grid: {\n          show: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          labels: {\n            show: false\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          }\n        },\n        yaxis: {\n          show: false\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Price;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/siabaek/Desktop/노마드코더/react-masterclass/src/routes/Price.tsx"],"names":["useQuery","fetchCoinHistory","ApexChart","Chart","coinId","isLoading","data","refetchInterval","map","price","x","time_close","y","open","high","low","close","theme","mode","chart","type","height","background","toolbar","show","grid","xaxis","labels","axisBorder","axisTicks","yaxis","Price"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAiBA,SAASC,KAAT,OAAuC;AAAA;;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AACrC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBN,QAAQ,CAClC,CAAC,OAAD,EAAUI,MAAV,CADkC,EAElC,MAAMH,gBAAgB,CAACG,MAAD,CAFY,EAGlC;AAAEG,IAAAA,eAAe,EAAE;AAAnB,GAHkC,CAApC;AAMA,sBACE;AAAA,cACGF,SAAS,GACR,kBADQ,gBAGR,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,MAAM,EAAE,CACN;AACEC,QAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAWC,KAAD,KAAY;AAC1BC,UAAAA,CAAC,EAAED,KAAK,CAACE,UADiB;AAE1BC,UAAAA,CAAC,EAAE,CAACH,KAAK,CAACI,IAAP,EAAaJ,KAAK,CAACK,IAAnB,EAAyBL,KAAK,CAACM,GAA/B,EAAoCN,KAAK,CAACO,KAA1C;AAFuB,SAAZ,CAAV;AADR,OADM,CAFV;AAUE,MAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD,SADA;AAIPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,aADD;AAELC,UAAAA,MAAM,EAAE,GAFH;AAGLC,UAAAA,UAAU,EAAE,aAHP;AAILC,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE;AADC;AAJJ,SAJA;AAYPC,QAAAA,IAAI,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR,SAZC;AAaPE,QAAAA,KAAK,EAAE;AACLN,UAAAA,IAAI,EAAE,UADD;AAELO,UAAAA,MAAM,EAAE;AAAEH,YAAAA,IAAI,EAAE;AAAR,WAFH;AAGLI,UAAAA,UAAU,EAAE;AAAEJ,YAAAA,IAAI,EAAE;AAAR,WAHP;AAILK,UAAAA,SAAS,EAAE;AAAEL,YAAAA,IAAI,EAAE;AAAR;AAJN,SAbA;AAmBPM,QAAAA,KAAK,EAAE;AACLN,UAAAA,IAAI,EAAE;AADD;AAnBA;AAVX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GAjDQrB,K;UACqBH,Q;;;KADrBG,K;AAkDT,eAAe4B,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    { refetchInterval: 5000 }\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => ({\n                x: price.time_close,\n                y: [price.open, price.high, price.low, price.close],\n              })),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              type: \"candlestick\",\n              height: 800,\n              background: \"transparent\",\n              toolbar: {\n                show: false,\n              },\n            },\n            grid: { show: false },\n            xaxis: {\n              type: \"datetime\",\n              labels: { show: false },\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n            },\n            yaxis: {\n              show: false,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\nexport default Price;\n"]},"metadata":{},"sourceType":"module"}