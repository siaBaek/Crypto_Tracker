{"ast":null,"code":"var _jsxFileName = \"/Users/siabaek/Desktop/\\u1102\\u1169\\u1106\\u1161\\u1103\\u1173\\u110F\\u1169\\u1103\\u1165/react-masterclass/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId), {\n    refetchInterval: 5000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"candlestick\",\n      series: [{\n        data: data === null || data === void 0 ? void 0 : data.map(price => {\n          return {\n            x: price.time_close.slice(2, 10),\n            y: [price.open.toFixed(2), price.high.toFixed(2), price.low.toFixed(2), price.close.toFixed(2)]\n          };\n        })\n      }],\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 1\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/siabaek/Desktop/노마드코더/react-masterclass/src/routes/Chart.tsx"],"names":["useQuery","fetchCoinHistory","ApexChart","Chart","coinId","isLoading","data","refetchInterval","map","price","x","time_close","slice","y","open","toFixed","high","low","close","chart","toolbar","show","background","grid","stroke","curve","width","yaxis","xaxis","axisBorder","axisTicks","labels"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAiBA,SAASC,KAAT,OAAuC;AAAA;;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AACrC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBN,QAAQ,CAClC,CAAC,OAAD,EAAUI,MAAV,CADkC,EAElC,MAAMH,gBAAgB,CAACG,MAAD,CAFY,EAGlC;AAAEG,IAAAA,eAAe,EAAE;AAAnB,GAHkC,CAApC;AAMA,sBACE;AAAA,cACGF,SAAS,GACR,kBADQ,gBAGR,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,MAAM,EAAE,CACN;AACEC,QAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAWC,KAAD,IAAW;AACzB,iBAAO;AACLC,YAAAA,CAAC,EAAED,KAAK,CAACE,UAAN,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,EAA1B,CADE;AAELC,YAAAA,CAAC,EAAE,CACDJ,KAAK,CAACK,IAAN,CAAWC,OAAX,CAAmB,CAAnB,CADC,EAEDN,KAAK,CAACO,IAAN,CAAWD,OAAX,CAAmB,CAAnB,CAFC,EAGDN,KAAK,CAACQ,GAAN,CAAUF,OAAV,CAAkB,CAAlB,CAHC,EAIDN,KAAK,CAACS,KAAN,CAAYH,OAAZ,CAAoB,CAApB,CAJC;AAFE,WAAP;AASD,SAVK;AADR,OADM,CAFV;AAiBE,MAAA,OAAO,EAAE;AACPI,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE;AADC,WADJ;AAILC,UAAAA,UAAU,EAAE;AAJP,SADA;AAQPC,QAAAA,IAAI,EAAE;AACJF,UAAAA,IAAI,EAAE;AADF,SARC;AAYPG,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,QADD;AAENC,UAAAA,KAAK,EAAE;AAFD,SAZD;AAiBPC,QAAAA,KAAK,EAAE;AACLN,UAAAA,IAAI,EAAE;AADD,SAjBA;AAqBPO,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE;AACVR,YAAAA,IAAI,EAAE;AADI,WADP;AAKLS,UAAAA,SAAS,EAAE;AACTT,YAAAA,IAAI,EAAE;AADG,WALN;AASLU,UAAAA,MAAM,EAAE;AACNV,YAAAA,IAAI,EAAE;AADA;AATH;AArBA;AAjBX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD;;GApEQlB,K;UACqBH,Q;;;KADrBG,K;AAqET,eAAeA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    { refetchInterval: 5000 }\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => {\n                return {\n                  x: price.time_close.slice(2, 10),\n                  y: [\n                    price.open.toFixed(2),\n                    price.high.toFixed(2),\n                    price.low.toFixed(2),\n                    price.close.toFixed(2),\n                  ],\n                };\n              }),\n            },\n          ]}\n          options={{\n            chart: {\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n\n            grid: {\n              show: false,\n            },\n\n            stroke: {\n              curve: \"smooth\",\n              width: 1,\n            },\n\n            yaxis: {\n              show: false,\n            },\n\n            xaxis: {\n              axisBorder: {\n                show: false,\n              },\n\n              axisTicks: {\n                show: false,\n              },\n\n              labels: {\n                show: true,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}