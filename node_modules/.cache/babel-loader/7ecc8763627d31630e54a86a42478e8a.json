{"ast":null,"code":"var _jsxFileName = \"/Users/siabaek/Desktop/\\u1102\\u1169\\u1106\\u1161\\u1103\\u1173\\u110F\\u1169\\u1103\\u1165/react-masterclass/src/routes/Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinTickers } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PriceList = styled.ul``;\n_c = PriceList;\nconst PriceOne = styled.li``;\n\nfunction Price(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"price\", coinId], () => fetchCoinTickers(coinId), {\n    refetchInterval: 5000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading prices...\" : /*#__PURE__*/_jsxDEV(PriceList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 50\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Price, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Price;\nexport default Price;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PriceList\");\n$RefreshReg$(_c2, \"Price\");","map":{"version":3,"sources":["/Users/siabaek/Desktop/노마드코더/react-masterclass/src/routes/Price.tsx"],"names":["useQuery","styled","fetchCoinTickers","PriceList","ul","PriceOne","li","Price","coinId","isLoading","data","refetchInterval"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,QAAjC;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,EAAG,EAA5B;KAAMD,S;AAEN,MAAME,QAAQ,GAAGJ,MAAM,CAACK,EAAG,EAA3B;;AAwCA,SAASC,KAAT,OAAuC;AAAA;;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AACrC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBV,QAAQ,CAClC,CAAC,OAAD,EAAUQ,MAAV,CADkC,EAElC,MAAMN,gBAAgB,CAACM,MAAD,CAFY,EAGlC;AAAEG,IAAAA,eAAe,EAAE;AAAnB,GAHkC,CAApC;AAKA,sBAAO;AAAA,cAAMF,SAAS,GAAG,mBAAH,gBAAyB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAPQF,K;UACqBP,Q;;;MADrBO,K;AAQT,eAAeA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinTickers } from \"../api\";\n\nconst PriceList = styled.ul``;\n\nconst PriceOne = styled.li``;\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface PriceProps {\n  coinId: string;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<PriceData[]>(\n    [\"price\", coinId],\n    () => fetchCoinTickers(coinId),\n    { refetchInterval: 5000 }\n  );\n  return <div>{isLoading ? \"Loading prices...\" : <PriceList></PriceList>}</div>;\n}\nexport default Price;\n"]},"metadata":{},"sourceType":"module"}